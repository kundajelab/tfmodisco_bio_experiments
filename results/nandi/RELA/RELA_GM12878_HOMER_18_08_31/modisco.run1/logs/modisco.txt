Using cuDNN version 7001 on context None
Mapped name None to device cuda0: GeForce GTX TITAN X (0000:05:00.0)
2018-10-01 05:46:01 INFO  /home/ktian/kundajelab/tfnet/scripts/run_tfmodisco.py --scores scores/hyp_scores_task_ --fasta interpret.fa --tsv interpret.tsv --start-task 0 --end-task 1 --fdr 0.25 --min-seqlets 15000
2018-10-01 05:46:01 DEBUG Theano version:1.0.2
2018-10-01 05:46:01 DEBUG 2.7.15 |Anaconda, Inc.| (default, May  1 2018, 23:32:55) 
[GCC 7.2.0]
2018-10-01 05:46:01 DEBUG method file prefix is scores/hyp_scores_task_, input seq file is interpret.fa, input tsv is interpret.tsv, start_task is 0 end_task is 1, fdr is 0.250000
2018-10-01 05:46:01 DEBUG lenth of sequences = 15328
2018-10-01 05:46:02 DEBUG merged overlaps based on in_tsv interpret.tsv, 15328 seqs merged into 14756 seqs, max len 1050
2018-10-01 05:46:04 DEBUG shape of hyp_score (400, 4)
2018-10-01 05:46:04 DEBUG shape of score (400, 4)
On task task0
Computing windowed sums
Computing threshold
2018-10-01 05:46:16 DEBUG CACHEDIR=/home/ktian/.cache/matplotlib
2018-10-01 05:46:16 DEBUG Using fontManager instance from /home/ktian/.cache/matplotlib/fontList.json
2018-10-01 05:46:16 DEBUG backend agg version v2.2
2018-10-01 05:46:16 DEBUG findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans (u'/home/ktian/anaconda3/envs/tfenv/lib/python2.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000
peak(mu)= 0.2526078080794541
Mu: 2.526078e-01 +/- 1.098865e-05
Lablace_b: 0.4620160006808008 and 1.0143127463110602
Thresholds: -3.7743896525353193 and 4.732788135646842
#fdrs pass: 0 and 192374
CDFs: 0.9998360817695571 and 0.9879291458312518
Est. FDRs: 1.0 and 0.24999783466819753
saving plot to figures/laplace_0.png
Got 13463 coords
After resolving overlaps, got 13463 seqlets
Across all tasks, the weakest laplace threshold used was: 0.9879291458312518
13463 identified in total
Reducing weak_threshold_for_counting_sign to match laplace_threshold_cdf, from 0.99 to 0.9879291458312518
1 activity patterns with support >= 100 out of 3 possible patterns
Metacluster sizes:  [13462]
Idx to activities:  {0: '1'}
On metacluster 0
Metacluster size 13462
Relevant tasks:  ('task0',)
Relevant signs:  (1,)
TfModiscoSeqletsToPatternsFactory: seed=1234
(Round 1) num seqlets: 13462
(Round 1) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 12.96 s
Starting affinity matrix computations
Normalization computed in 2.76 s
Cosine similarity mat computed in 13.4 s
Normalization computed in 3.48 s
Cosine similarity mat computed in 14.35 s
Finished affinity matrix computations in 28.1 s
(Round 1) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 3.42 s
(Round 1) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 350.6 s
Launching nearest neighbors affmat calculation job
Job completed in: 360.37 s
(Round 1) Computed affinity matrix on nearest neighbors in 732.25 s
Filtered down to 10683 of 13462
(Round 1) Retained 10683 rows out of 13462 after filtering
(Round 1) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 10683 samples in 0.078s...
[t-SNE] Computed neighbors for 10683 samples in 0.930s...
[t-SNE] Computed conditional probabilities for sample 1000 / 10683
[t-SNE] Computed conditional probabilities for sample 2000 / 10683
[t-SNE] Computed conditional probabilities for sample 3000 / 10683
[t-SNE] Computed conditional probabilities for sample 4000 / 10683
[t-SNE] Computed conditional probabilities for sample 5000 / 10683
[t-SNE] Computed conditional probabilities for sample 6000 / 10683
[t-SNE] Computed conditional probabilities for sample 7000 / 10683
[t-SNE] Computed conditional probabilities for sample 8000 / 10683
[t-SNE] Computed conditional probabilities for sample 9000 / 10683
[t-SNE] Computed conditional probabilities for sample 10000 / 10683
[t-SNE] Computed conditional probabilities for sample 10683 / 10683
[t-SNE] Mean sigma: 0.186780
(Round 1) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.595412015915 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    7.8s
[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   35.3s
[Parallel(n_jobs=4)]: Done 200 out of 200 | elapsed:   36.8s finished
Louvain completed 200 runs in 85.6118159294 seconds
Wrote graph to binary file in 21.6143488884 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.761824
After 3 runs, maximum modularity is Q = 0.779984
After 11 runs, maximum modularity is Q = 0.780045
After 14 runs, maximum modularity is Q = 0.780054
After 43 runs, maximum modularity is Q = 0.780102
Louvain completed 93 runs in 160.243903875 seconds
Preproc + Louvain took 274.837069988 s
Got 11 clusters after round 1
Counts:
{0: 1587, 1: 1384, 2: 1192, 3: 1149, 4: 1124, 5: 1027, 6: 1008, 7: 752, 8: 566, 9: 468, 10: 426}
(Round 1) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 1587 seqlets
Trimmed 38 out of 1587
Aggregating for cluster 1 with 1384 seqlets
Trimmed 84 out of 1384
Aggregating for cluster 2 with 1192 seqlets
Trimmed 33 out of 1192
Aggregating for cluster 3 with 1149 seqlets
Trimmed 50 out of 1149
Aggregating for cluster 4 with 1124 seqlets
Trimmed 11 out of 1124
Aggregating for cluster 5 with 1027 seqlets
Trimmed 80 out of 1027
Aggregating for cluster 6 with 1008 seqlets
Trimmed 52 out of 1008
Aggregating for cluster 7 with 752 seqlets
Trimmed 13 out of 752
Aggregating for cluster 8 with 566 seqlets
Trimmed 14 out of 566
Aggregating for cluster 9 with 468 seqlets
Trimmed 6 out of 468
Aggregating for cluster 10 with 426 seqlets
Trimmed 37 out of 426
(Round 2) num seqlets: 10265
(Round 2) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 11.5 s
Starting affinity matrix computations
Normalization computed in 2.24 s
Cosine similarity mat computed in 10.26 s
Normalization computed in 2.75 s
Cosine similarity mat computed in 11.1 s
Finished affinity matrix computations in 21.59 s
(Round 2) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 2.56 s
(Round 2) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 459.18 s
Launching nearest neighbors affmat calculation job
Job completed in: 677.42 s
(Round 2) Computed affinity matrix on nearest neighbors in 1159.87 s
Not applying filtering for rounds above first round
(Round 2) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 10265 samples in 0.079s...
[t-SNE] Computed neighbors for 10265 samples in 0.622s...
[t-SNE] Computed conditional probabilities for sample 1000 / 10265
[t-SNE] Computed conditional probabilities for sample 2000 / 10265
[t-SNE] Computed conditional probabilities for sample 3000 / 10265
[t-SNE] Computed conditional probabilities for sample 4000 / 10265
[t-SNE] Computed conditional probabilities for sample 5000 / 10265
[t-SNE] Computed conditional probabilities for sample 6000 / 10265
[t-SNE] Computed conditional probabilities for sample 7000 / 10265
[t-SNE] Computed conditional probabilities for sample 8000 / 10265
[t-SNE] Computed conditional probabilities for sample 9000 / 10265
[t-SNE] Computed conditional probabilities for sample 10000 / 10265
[t-SNE] Computed conditional probabilities for sample 10265 / 10265
[t-SNE] Mean sigma: 0.182769
(Round 2) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.686578989029 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:   10.6s
[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   47.8s
[Parallel(n_jobs=4)]: Done 200 out of 200 | elapsed:   49.8s finished
Louvain completed 200 runs in 89.0285828114 seconds
Wrote graph to binary file in 25.4389159679 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.729338
After 15 runs, maximum modularity is Q = 0.729349
After 19 runs, maximum modularity is Q = 0.729369
After 39 runs, maximum modularity is Q = 0.736338
After 60 runs, maximum modularity is Q = 0.736358
Louvain completed 110 runs in 212.694010019 seconds
Preproc + Louvain took 334.600785971 s
Got 11 clusters after round 2
Counts:
{0: 1954, 1: 1176, 2: 1124, 3: 1116, 4: 1091, 5: 1087, 6: 997, 7: 867, 8: 508, 9: 325, 10: 20}
(Round 2) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 1954 seqlets
Trimmed 67 out of 1954
Aggregating for cluster 1 with 1176 seqlets
Trimmed 40 out of 1176
Aggregating for cluster 2 with 1124 seqlets
Trimmed 19 out of 1124
Aggregating for cluster 3 with 1116 seqlets
Trimmed 11 out of 1116
Aggregating for cluster 4 with 1091 seqlets
Trimmed 57 out of 1091
Aggregating for cluster 5 with 1087 seqlets
Trimmed 23 out of 1087
Aggregating for cluster 6 with 997 seqlets
Trimmed 19 out of 997
Aggregating for cluster 7 with 867 seqlets
Trimmed 24 out of 867
Aggregating for cluster 8 with 508 seqlets
Trimmed 55 out of 508
Aggregating for cluster 9 with 325 seqlets
Trimmed 43 out of 325
Aggregating for cluster 10 with 20 seqlets
Trimmed 4 out of 20
Got 11 clusters
Splitting into subclusters...
Inspecting for spurious merging
Wrote graph to binary file in 4.09752488136 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0112565
After 2 runs, maximum modularity is Q = 0.0112567
Louvain completed 22 runs in 17.2300698757 seconds
Similarity is 0.7672861690872996; is_dissimilar is True
Inspecting for spurious merging
Wrote graph to binary file in 1.2831530571 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00399518
Louvain completed 21 runs in 12.5244369507 seconds
Similarity is 0.9440317180645008; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.977014064789 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00515917
After 3 runs, maximum modularity is Q = 0.00515921
After 4 runs, maximum modularity is Q = 0.00515923
After 6 runs, maximum modularity is Q = 0.00515933
Louvain completed 26 runs in 16.5863339901 seconds
Similarity is 0.9128787396601555; is_dissimilar is False
Got 2 subclusters
Inspecting for spurious merging
Wrote graph to binary file in 1.54506993294 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00560768
After 3 runs, maximum modularity is Q = 0.00599982
After 5 runs, maximum modularity is Q = 0.00599984
Louvain completed 25 runs in 16.7168369293 seconds
Similarity is 0.9201106037853121; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.5208029747 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00787025
After 2 runs, maximum modularity is Q = 0.00787043
After 4 runs, maximum modularity is Q = 0.00787046
Louvain completed 24 runs in 15.8048119545 seconds
Similarity is 0.8294615552918024; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.60079479218 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0044955
After 2 runs, maximum modularity is Q = 0.00449639
After 3 runs, maximum modularity is Q = 0.00449657
After 15 runs, maximum modularity is Q = 0.00449661
After 23 runs, maximum modularity is Q = 0.00449665
Louvain completed 43 runs in 28.2565460205 seconds
Similarity is 0.9546983142461895; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.36303210258 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00490454
After 2 runs, maximum modularity is Q = 0.00490849
Louvain completed 22 runs in 13.9029948711 seconds
Similarity is 0.9394845968222658; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.26005911827 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00607607
After 2 runs, maximum modularity is Q = 0.00607686
After 6 runs, maximum modularity is Q = 0.00607696
Louvain completed 26 runs in 17.0386238098 seconds
Similarity is 0.9165475197546396; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.06526303291 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00389115
After 3 runs, maximum modularity is Q = 0.00389124
Louvain completed 23 runs in 14.7905948162 seconds
Similarity is 0.9670646681582046; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.812867164612 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00466337
After 3 runs, maximum modularity is Q = 0.00466447
Louvain completed 23 runs in 13.1268570423 seconds
Similarity is 0.9320804273796831; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.292931079865 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00407748
Louvain completed 21 runs in 10.7769479752 seconds
Similarity is 0.9143837437563644; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.103981018066 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00525005
Louvain completed 21 runs in 11.1238880157 seconds
Similarity is 0.9154313209015718; is_dissimilar is False
Merging on 12 clusters
On merging iteration 1
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 5 & 7 with prob 0.002507219128794173 and sim 0.9515970463137711
Collapsing 4 & 5 with prob 0.002587980679579362 and sim 0.9515081320151675
Collapsing 2 & 6 with prob 0.0002307087349707709 and sim 0.9351063008366005
Collapsing 2 & 4 with prob 6.978709949531368e-05 and sim 0.9203607195150787
Aborting collapse as 5 & 6 have prob 3.262334688182314e-05 and sim 0.7965837852695583
Collapsing 4 & 7 with prob 0.0005010222468220285 and sim 0.909468664059746
Collapsing 6 & 7 with prob 0.00022875116131516255 and sim 0.9028943478992586
Aborting collapse as 5 & 6 have prob 3.262334688182314e-05 and sim 0.7965837852695583
Collapsing 2 & 5 with prob 2.9380293209528546e-05 and sim 0.8977669231120112
Aborting collapse as 5 & 6 have prob 3.262334688182314e-05 and sim 0.7965837852695583
Collapsing 0 & 3 with prob 0.0013816937211699686 and sim 0.8655226569664977
Trimmed 1 out of 2012
Trimmed 2 out of 3116
Trimmed 1 out of 2200
Trimmed 1 out of 2107
On merging iteration 2
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 0 & 1 with prob 0.0029209257549719443 and sim 0.9061279318660797
Trimmed 9 out of 5313
On merging iteration 3
Computing pattern to seqlet distances
Computing pattern to pattern distances
Got 7 patterns after merging
Performing seqlet reassignment
Cross contin jaccard time taken: 1.78 s
Cross contin jaccard time taken: 1.62 s
Got 6 patterns after reassignment
Total time taken is 3041.71s
2018-10-01 06:37:04 DEBUG **************** workflow done *********************
2018-10-01 06:37:05 DEBUG **************** result saved *********************
