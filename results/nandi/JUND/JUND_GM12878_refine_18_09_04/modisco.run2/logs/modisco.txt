Using cuDNN version 7001 on context None
Mapped name None to device cuda0: GeForce GTX TITAN X (0000:05:00.0)
2018-09-15 17:10:53 INFO  /home/ktian/kundajelab/tfnet/scripts/run_tfmodisco.py --scores scores/hyp_scores_task_ --fasta interpret.fa --tsv interpret.tsv --start-task 0 --end-task 1 --fdr 0.25 --min-seqlets 6000
2018-09-15 17:10:53 DEBUG Theano version:1.0.2
2018-09-15 17:10:53 DEBUG 2.7.15 |Anaconda, Inc.| (default, May  1 2018, 23:32:55) 
[GCC 7.2.0]
2018-09-15 17:10:53 DEBUG method file prefix is scores/hyp_scores_task_, input seq file is interpret.fa, input tsv is interpret.tsv, start_task is 0 end_task is 1, fdr is 0.250000
2018-09-15 17:10:53 DEBUG lenth of sequences = 9051
2018-09-15 17:10:53 DEBUG merged overlaps based on in_tsv interpret.tsv, 9051 seqs merged into 7215 seqs, max len 838
2018-09-15 17:10:54 DEBUG shape of hyp_score (403, 4)
2018-09-15 17:10:54 DEBUG shape of score (403, 4)
On task task0
Computing windowed sums
Computing threshold
2018-09-15 17:11:01 DEBUG CACHEDIR=/home/ktian/.cache/matplotlib
2018-09-15 17:11:01 DEBUG Using fontManager instance from /home/ktian/.cache/matplotlib/fontList.json
2018-09-15 17:11:01 DEBUG backend agg version v2.2
2018-09-15 17:11:01 DEBUG findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans (u'/home/ktian/anaconda3/envs/tfenv/lib/python2.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000
peak(mu)= 0.5215856881841319
Mu: 5.215857e-01 +/- 1.959650e-05
Lablace_b: 0.7380559942446765 and 1.8894696651802416
Thresholds: -5.243010050588055 and 9.093666024971753
#fdrs pass: 0 and 88454
CDFs: 0.9995945498920668 and 0.9892920118501327
Est. FDRs: 1.0 and 0.24997899660690187
saving plot to figures/laplace_0.png
Got 5378 coords
After resolving overlaps, got 5378 seqlets
Across all tasks, the weakest laplace threshold used was: 0.9892920118501327
5378 identified in total
Reducing weak_threshold_for_counting_sign to match laplace_threshold_cdf, from 0.99 to 0.9892920118501327
1 activity patterns with support >= 100 out of 3 possible patterns
Metacluster sizes:  [5377]
Idx to activities:  {0: '1'}
On metacluster 0
Metacluster size 5377
Relevant tasks:  ('task0',)
Relevant signs:  (1,)
TfModiscoSeqletsToPatternsFactory: seed=1234
(Round 1) num seqlets: 5377
(Round 1) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 5.19 s
Starting affinity matrix computations
Normalization computed in 1.2 s
Cosine similarity mat computed in 3.62 s
Normalization computed in 1.6 s
Cosine similarity mat computed in 4.3 s
Finished affinity matrix computations in 8.1 s
(Round 1) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.75 s
(Round 1) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 146.73 s
Launching nearest neighbors affmat calculation job
Job completed in: 156.48 s
(Round 1) Computed affinity matrix on nearest neighbors in 311.73 s
Filtered down to 4678 of 5377
(Round 1) Retained 4678 rows out of 5377 after filtering
(Round 1) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 4678 samples in 0.014s...
[t-SNE] Computed neighbors for 4678 samples in 0.159s...
[t-SNE] Computed conditional probabilities for sample 1000 / 4678
[t-SNE] Computed conditional probabilities for sample 2000 / 4678
[t-SNE] Computed conditional probabilities for sample 3000 / 4678
[t-SNE] Computed conditional probabilities for sample 4000 / 4678
[t-SNE] Computed conditional probabilities for sample 4678 / 4678
[t-SNE] Mean sigma: 0.179072
(Round 1) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.244719028473 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    3.5s
[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   16.1s
[Parallel(n_jobs=4)]: Done 200 out of 200 | elapsed:   16.7s finished
Louvain completed 200 runs in 28.8557720184 seconds
Wrote graph to binary file in 6.99941301346 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.701059
After 2 runs, maximum modularity is Q = 0.701061
After 4 runs, maximum modularity is Q = 0.710429
After 5 runs, maximum modularity is Q = 0.710431
After 8 runs, maximum modularity is Q = 0.710476
After 17 runs, maximum modularity is Q = 0.71155
Louvain completed 67 runs in 41.6417999268 seconds
Preproc + Louvain took 78.9718871117 s
Got 9 clusters after round 1
Counts:
{0: 998, 1: 885, 2: 797, 3: 601, 4: 568, 5: 392, 6: 353, 7: 54, 8: 30}
(Round 1) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 998 seqlets
Trimmed 17 out of 998
Aggregating for cluster 1 with 885 seqlets
Trimmed 32 out of 885
Aggregating for cluster 2 with 797 seqlets
Trimmed 50 out of 797
Aggregating for cluster 3 with 601 seqlets
Trimmed 8 out of 601
Aggregating for cluster 4 with 568 seqlets
Trimmed 96 out of 568
Aggregating for cluster 5 with 392 seqlets
Trimmed 10 out of 392
Aggregating for cluster 6 with 353 seqlets
Trimmed 15 out of 353
Aggregating for cluster 7 with 54 seqlets
Trimmed 1 out of 54
Aggregating for cluster 8 with 30 seqlets
Trimmed 0 out of 30
(Round 2) num seqlets: 4449
(Round 2) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 4.54 s
Starting affinity matrix computations
Normalization computed in 1.03 s
Cosine similarity mat computed in 2.68 s
Normalization computed in 1.11 s
Cosine similarity mat computed in 2.96 s
Finished affinity matrix computations in 5.77 s
(Round 2) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.43 s
(Round 2) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 201.75 s
Launching nearest neighbors affmat calculation job
Job completed in: 174.27 s
(Round 2) Computed affinity matrix on nearest neighbors in 384.23 s
Not applying filtering for rounds above first round
(Round 2) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 4449 samples in 0.023s...
[t-SNE] Computed neighbors for 4449 samples in 0.186s...
[t-SNE] Computed conditional probabilities for sample 1000 / 4449
[t-SNE] Computed conditional probabilities for sample 2000 / 4449
[t-SNE] Computed conditional probabilities for sample 3000 / 4449
[t-SNE] Computed conditional probabilities for sample 4000 / 4449
[t-SNE] Computed conditional probabilities for sample 4449 / 4449
[t-SNE] Mean sigma: 0.174664
(Round 2) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.325680017471 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    5.7s
[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   23.4s
[Parallel(n_jobs=4)]: Done 200 out of 200 | elapsed:   24.3s finished
Louvain completed 200 runs in 35.3050160408 seconds
Wrote graph to binary file in 7.50079703331 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657737
Louvain completed 51 runs in 39.0621099472 seconds
Preproc + Louvain took 83.4805140495 s
Got 6 clusters after round 2
Counts:
{0: 1274, 1: 1207, 2: 981, 3: 593, 4: 364, 5: 30}
(Round 2) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 1274 seqlets
Trimmed 15 out of 1274
Aggregating for cluster 1 with 1207 seqlets
Trimmed 37 out of 1207
Aggregating for cluster 2 with 981 seqlets
Trimmed 25 out of 981
Aggregating for cluster 3 with 593 seqlets
Trimmed 2 out of 593
Aggregating for cluster 4 with 364 seqlets
Trimmed 7 out of 364
Aggregating for cluster 5 with 30 seqlets
Trimmed 0 out of 30
Got 6 clusters
Splitting into subclusters...
Inspecting for spurious merging
Wrote graph to binary file in 1.52660393715 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00426972
After 2 runs, maximum modularity is Q = 0.00426981
Louvain completed 22 runs in 9.63714003563 seconds
Similarity is 0.9534482071570242; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.33005905151 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00677445
Louvain completed 21 runs in 7.75428104401 seconds
Similarity is 0.9167730662193032; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.939427137375 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00716624
Louvain completed 21 runs in 7.4024951458 seconds
Similarity is 0.8694291664696262; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.513286113739 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00463226
After 4 runs, maximum modularity is Q = 0.00463456
After 5 runs, maximum modularity is Q = 0.00463457
After 13 runs, maximum modularity is Q = 0.00463463
Louvain completed 33 runs in 9.88506293297 seconds
Similarity is 0.9803591179655222; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.194737911224 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00817887
After 4 runs, maximum modularity is Q = 0.00818618
Louvain completed 24 runs in 6.5283408165 seconds
Similarity is 0.832408055466151; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.00362515449524 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00168044
After 2 runs, maximum modularity is Q = 0.00168045
Louvain completed 22 runs in 5.80709290504 seconds
Similarity is 0.8878341065820022; is_dissimilar is False
Merging on 6 clusters
On merging iteration 1
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 0 & 1 with prob 0.016457273114126997 and sim 0.9184878617867057
Trimmed 2 out of 2429
On merging iteration 2
Computing pattern to seqlet distances
Computing pattern to pattern distances
Got 5 patterns after merging
Performing seqlet reassignment
Got 5 patterns after reassignment
Total time taken is 1012.16s
2018-09-15 17:27:58 DEBUG **************** workflow done *********************
2018-09-15 17:27:58 DEBUG **************** result saved *********************
