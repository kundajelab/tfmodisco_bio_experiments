2018-07-19 17:24:06 INFO  run_tfmodisco.py scores/hyp_scores_task_ subset_nobg.fa subset_nobg.tsv 5
2018-07-19 17:24:07 DEBUG $HOME=/home/ktian
2018-07-19 17:24:07 DEBUG matplotlib data path /home/ktian/anaconda3/envs/modisco_dev/lib/python2.7/site-packages/matplotlib/mpl-data
2018-07-19 17:24:07 DEBUG loaded rc file /home/ktian/anaconda3/envs/modisco_dev/lib/python2.7/site-packages/matplotlib/mpl-data/matplotlibrc
2018-07-19 17:24:07 DEBUG matplotlib version 2.2.2
2018-07-19 17:24:07 DEBUG interactive is False
2018-07-19 17:24:07 DEBUG platform is linux2
2018-07-19 17:24:07 DEBUG loaded modules: ['numpy.testing.nose_tools.nosetester', 'heapq', 'numpy.core.info', 'distutils', 'functools', 'random', 'unittest.types', 'datetime', 'sysconfig', 'json.encoder', 'select', 'gc', 'numpy.lib.numpy', 'distutils.sysconfig', 'ctypes._endian', 'encodings.encodings', 'unittest.pprint', 'matplotlib.colors', 'numpy.core.numerictypes', 'numpy._distributor_init', 'numpy.random.mtrand', 'logging.weakref', 'numpy.matrixlib.defmatrix', 'numpy.random.info', 'tempfile', 'pprint', 'numpy.linalg', 'mkl_fft', 'imp', 'numpy.testing', 'collections', 'logging.thread', 'unittest.sys', 'numpy.core.umath', 'unittest.main', 'distutils.types', 'numpy.lib._version', 'zipimport', 'string', 'json.struct', 'numpy.linalg.info', 'numpy.polynomial._polybase', 'unittest.functools', 'numpy.lib.arraysetops', 'matplotlib.compat', 'encodings.utf_8', 'unittest.util', 'numpy.version', 'distutils.re', 'ctypes.os', 'numpy.core.machar', 'numpy.lib.type_check', 'httplib', 'unittest.StringIO', 'bisect', 'numpy.core._internal', 'signal', 'numpy.random.operator', 'numpy.lib._datasource', 'unittest.re', 'threading', 'token', 'numpy.fft.fftpack_lite', 'json.scanner', 'matplotlib.cbook', '_cython_0_27_3', 'textwrap', 'numpy.core.multiarray', 'cycler', 'numpy.lib', 'numpy.linalg._umath_linalg', 'decimal', 'json.json', 'dis', 'distutils.version', 'cStringIO', 'google', 'logging.threading', 'unittest.time', 'locale', 'numpy.add_newdocs', 'logging.os', 'unittest.difflib', 'numpy.core.getlimits', 'base64', 'atexit', 'pyparsing', 'matplotlib.compat.subprocess', 'encodings', 'matplotlib.cbook.warnings', 'matplotlib._color_data', 'matplotlib.cbook.deprecation', 'logging.traceback', 'matplotlib.cbook.textwrap', 'abc', 'numpy.matrixlib', 'numpy.ma.extras', 'numpy.testing.decorators', 'numpy._globals', 'rfc822', 'numpy.lib.npyio', 'backports', 'matplotlib.sys', 'numpy.random.threading', 're', 'numpy.lib.mixins', '_posixsubprocess32', 'numpy.polynomial.legendre', 'mkl_fft._pydfti', 'numpy.core.shape_base', 'math', 'numpy.fft.helper', 'fcntl', 'unittest.case', 'matplotlib.fontconfig_pattern', 'mpl_toolkits', 'dateutil', 'ast', 'UserDict', 'unittest.suite', 'inspect', 'distutils.os', 'matplotlib', 'fnmatch', '_hashlib', 'ctypes', '_ctypes', 'ctypes.struct', 'codecs', 'backports.functools_lru_cache', 'logging.sys', '_json', 'numpy.os', 'unittest.loader', 'struct', '_functools', '_locale', 'logging', 'socket', 'thread', 'StringIO', 'numpy.core.memmap', 'pickle', 'traceback', 'cython_runtime', 'numpy.lib.info', 'weakref', 'itertools', 'numpy.ctypes', 'opcode', 'numpy.linalg.lapack_lite', 'numpy.ma', 'distutils.sys', 'os', 'marshal', 'mimetools', '__future__', 'six.moves', '_collections', 'urllib', '_sre', 'unittest', 'numpy.random', '__builtin__', 'numpy._mklinit', 'numpy.lib.twodim_base', 'numpy.polynomial', 'unittest.runner', 'operator', 'array', 'numpy.core.arrayprint', 'distutils.string', 'numpy.compat.py3k', 'ctypes._ctypes', '_heapq', 'ctypes.sys', 'six.moves.urllib', 'unittest.collections', 'posixpath', 'numpy.lib.financial', 'numpy.fft.fftpack', 'errno', 'mkl_fft._numpy_fft', '_socket', 'binascii', 'json', 'sre_constants', 'matplotlib.cbook.functools', 'logging.codecs', 'numpy.core._methods', 'os.path', 'numpy.core.function_base', 'tokenize', 'numpy.lib.stride_tricks', 'matplotlib.json', 'numpy', '_warnings', 'numpy.polynomial.chebyshev', 'numpy.testing.nose_tools.utils', 'json.re', 'cPickle', 'encodings.__builtin__', 'numpy.polynomial.hermite_e', '_codecs', 'subprocess32', 'unittest.fnmatch', 'numpy.polynomial.polynomial', 'numpy.__config__', 'encodings.ascii', 'pwd', 'mkl_fft.numpy', 'numpy.ma.core', 'numpy.testing.utils', 'logging.atexit', 'matplotlib.cbook._backports', 'numpy.lib.ufunclike', 'copy', '_sysconfigdata', '_struct', 'numpy.core.fromnumeric', 'hashlib', 'numpy.ctypeslib', 'matplotlib._version', '_ast', 'keyword', 'numpy.lib.scimath', 'numpy.fft', 'zlib', 'numpy.lib.nanfunctions', 'numpy.random.numpy', 'unittest.weakref', 'logging.time', 'numpy.core.multiarray_tests', '_bisect', 'numpy.polynomial.hermite', 'posix', 'encodings.aliases', 'numpy.lib.function_base', 'exceptions', 'sre_parse', 'json._json', 'logging.warnings', 'numpy.random.warnings', 'distutils.distutils', 'unittest.signal', 'copy_reg', 'sre_compile', 'json.sys', 'logging.cStringIO', '_random', 'site', 'numpy.lib.polynomial', 'numpy.compat', 'numpy._import_tools', 'logging.collections', 'backports_abc', 'contextlib', 'numbers', 'io', '__main__', 'numpy.fft.info', 'numpy.core.records', 'shutil', 'numpy.sys', 'numpy.polynomial.polyutils', 'urlparse', 'dateutil._version', 'unittest.result', 'strop', 'grp', 'linecache', 'numpy.core.numeric', 'six', 'encodings.codecs', 'six.moves.urllib.request', '_abcoll', 'matplotlib.testing', 'numpy.core', 'matplotlib.rcsetup', 'genericpath', 'stat', '_ssl', 'numpy.lib._iotools', 'numpy.lib.index_tricks', 'warnings', 'numpy.lib.utils', 'numpy.core.defchararray', 'glob', 'numpy.lib.shape_base', 'urllib2', 'unittest.signals', 'sys', 'unittest.traceback', 'numpy.polynomial.laguerre', 'numpy.compat._inspect', 'numpy.core.einsumfunc', 'ctypes.ctypes', 'numpy.lib.format', 'numpy.lib.arrayterator', 'numpy.testing.nosetester', 'types', 'bz2', 'future_builtins', 'ssl', 'numpy.testing.nose_tools', 'numpy.lib.arraypad', '_weakref', 'numpy.testing.nose_tools.decorators', 'difflib', 'distutils.errors', '_io', '_weakrefset', 'json.decoder', 'unittest.warnings', 'time', 'gzip', 'numpy.linalg.linalg', 'unittest.os']
Using cuDNN version 7001 on context None
Mapped name None to device cuda0: GeForce GTX TITAN X (0000:05:00.0)
2018-07-19 17:24:10 DEBUG Theano version:1.0.2
2018-07-19 17:24:10 DEBUG 2.7.15 |Anaconda, Inc.| (default, May  1 2018, 23:32:55) 
[GCC 7.2.0]
2018-07-19 17:24:10 DEBUG method file prefix is scores/hyp_scores_task_, input seq file is subset_nobg.fa, input tsv is subset_nobg.tsv, number of tasks is 5
2018-07-19 17:24:11 DEBUG lenth of sequences = 317144
2018-07-19 17:24:15 DEBUG in_tsv = subset_nobg.tsv
2018-07-19 17:24:15 DEBUG AverageScores: append to seq_list
2018-07-19 17:24:56 DEBUG shape of hyp_score (400, 4)
2018-07-19 17:24:56 DEBUG shape of score (400, 4)
2018-07-19 17:25:01 DEBUG in_tsv = subset_nobg.tsv
2018-07-19 17:25:01 DEBUG AverageScores: -
2018-07-19 17:25:40 DEBUG shape of hyp_score (400, 4)
2018-07-19 17:25:40 DEBUG shape of score (400, 4)
2018-07-19 17:25:45 DEBUG in_tsv = subset_nobg.tsv
2018-07-19 17:25:45 DEBUG AverageScores: -
2018-07-19 17:26:23 DEBUG shape of hyp_score (400, 4)
2018-07-19 17:26:23 DEBUG shape of score (400, 4)
2018-07-19 17:26:28 DEBUG in_tsv = subset_nobg.tsv
2018-07-19 17:26:28 DEBUG AverageScores: -
2018-07-19 17:27:07 DEBUG shape of hyp_score (400, 4)
2018-07-19 17:27:07 DEBUG shape of score (400, 4)
2018-07-19 17:27:12 DEBUG in_tsv = subset_nobg.tsv
2018-07-19 17:27:12 DEBUG AverageScores: -
2018-07-19 17:27:51 DEBUG shape of hyp_score (400, 4)
2018-07-19 17:27:51 DEBUG shape of score (400, 4)
On task task0
Computing windowed sums
Computing threshold
2018-07-19 17:32:42 DEBUG CACHEDIR=/home/ktian/.cache/matplotlib
2018-07-19 17:32:42 DEBUG Using fontManager instance from /home/ktian/.cache/matplotlib/fontList.json
2018-07-19 17:32:42 DEBUG backend agg version v2.2
2018-07-19 17:32:43 DEBUG findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans (u'/home/ktian/anaconda3/envs/tfenv/lib/python2.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000
Lablace_b: 0.23153229459995278 and 0.1551200341034089
Thresholds: -4.737314514163882 and 1.8071056065681788
#fdrs pass: 0 and 154365
CDFs: 0.9999999986997474 and 0.9999912785421061
Est. FDRs: 0.06846206656330309 and 0.0019997938249940077
saving plot to figures/laplace_0.png
Got 8253 coords
On task task1
Computing windowed sums
Computing threshold
Lablace_b: 0.26977964211935174 and 0.31262538670118856
Thresholds: -2.45973993788939 and 4.381665318389423
#fdrs pass: 0 and 19445
CDFs: 0.999890281125518 and 0.9999991814287489
Est. FDRs: 1.0 and 0.001999971167876275
saving plot to figures/laplace_1.png
Got 1526 coords
On task task2
Computing windowed sums
Computing threshold
Lablace_b: 0.15879559979934624 and 0.23556668319955978
Thresholds: -3.4384667839614504 and 2.9990229906115786
#fdrs pass: 9 and 78684
CDFs: 0.9999999996055046 and 0.9999970423039616
Est. FDRs: 0.001527338594369092 and 0.0019998971252737493
saving plot to figures/laplace_2.png
Got 4604 coords
On task task3
Computing windowed sums
Computing threshold
Lablace_b: 0.22287496659983227 and 0.18726962421211704
Thresholds: -4.279706739610233 and 2.495546022895724
#fdrs pass: 112 and 32819
CDFs: 0.9999999954232492 and 0.9999983684041904
Est. FDRs: 0.001954200722631591 and 0.001999831060096074
saving plot to figures/laplace_3.png
Got 2502 coords
On task task4
Computing windowed sums
Computing threshold
Lablace_b: 0.19768742286040472 and 0.22602705228284506
Thresholds: -3.7058074526255957 and 2.811761658173055
#fdrs pass: 0 and 93506
CDFs: 0.9999999927755355 and 0.9999960426430863
Est. FDRs: 0.29469748103485977 and 0.0019999790131896124
saving plot to figures/laplace_4.png
Got 5067 coords
After resolving overlaps, got 8269 seqlets
Across all tasks, the weakest laplace threshold used was: 0.999890281125518
8269 identified in total
3 activity patterns with support >= 100 out of 243 possible patterns
Metacluster sizes:  [6696, 1329, 152]
Idx to activities:  {0: '1,1,1,1,1', 1: '1,0,1,1,1', 2: '1,0,1,0,1'}
On metacluster 2
Metacluster size 152
Relevant tasks:  ('task0', 'task2', 'task4')
Relevant signs:  (1, 1, 1)
(Round 1) num seqlets: 152
(Round 1) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 0.19 s
Starting affinity matrix computations
Normalization computed in 0.03 s
Cosine similarity mat computed in 0.04 s
Normalization computed in 0.01 s
Cosine similarity mat computed in 0.02 s
Finished affinity matrix computations in 0.06 s
(Round 1) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.0 s
(Round 1) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 10.63 s
Launching nearest neighbors affmat calculation job
Job completed in: 11.63 s
(Round 1) Computed affinity matrix on nearest neighbors in 22.5 s
Filtered down to 149 of 152
(Round 1) Retained 149 rows out of 152 after filtering
(Round 1) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 149 samples in 0.000s...
[t-SNE] Computed neighbors for 149 samples in 0.001s...
[t-SNE] Computed conditional probabilities for sample 149 / 149
[t-SNE] Mean sigma: 0.236109
(Round 1) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.0192902088165 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=20)]: Done  10 tasks      | elapsed:    2.8s
[Parallel(n_jobs=20)]: Done 160 tasks      | elapsed:   22.6s
[Parallel(n_jobs=20)]: Done 200 out of 200 | elapsed:   27.9s finished
Louvain completed 200 runs in 37.8596198559 seconds
Wrote graph to binary file in 0.0190389156342 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.664556
After 4 runs, maximum modularity is Q = 0.694272
Louvain completed 54 runs in 70.0337378979 seconds
Preproc + Louvain took 107.948724985 s
Got 7 clusters after round 1
Counts:
{0: 40, 1: 32, 2: 22, 3: 20, 4: 16, 5: 11, 6: 8}
(Round 1) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 40 seqlets
Trimmed 4 out of 40
Aggregating for cluster 1 with 32 seqlets
Trimmed 0 out of 32
Aggregating for cluster 2 with 22 seqlets
Trimmed 0 out of 22
Aggregating for cluster 3 with 20 seqlets
Trimmed 0 out of 20
Aggregating for cluster 4 with 16 seqlets
Trimmed 0 out of 16
Aggregating for cluster 5 with 11 seqlets
Trimmed 0 out of 11
Aggregating for cluster 6 with 8 seqlets
Trimmed 0 out of 8
(Round 2) num seqlets: 145
(Round 2) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 0.17 s
Starting affinity matrix computations
Normalization computed in 0.02 s
Cosine similarity mat computed in 0.03 s
Normalization computed in 0.01 s
Cosine similarity mat computed in 0.02 s
Finished affinity matrix computations in 0.04 s
(Round 2) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.0 s
(Round 2) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 11.76 s
Launching nearest neighbors affmat calculation job
Job completed in: 11.93 s
(Round 2) Computed affinity matrix on nearest neighbors in 24.0 s
Not applying filtering for rounds above first round
(Round 2) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 145 samples in 0.000s...
[t-SNE] Computed neighbors for 145 samples in 0.002s...
[t-SNE] Computed conditional probabilities for sample 145 / 145
[t-SNE] Mean sigma: 0.233427
(Round 2) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.0295259952545 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=20)]: Done  10 tasks      | elapsed:    2.3s
[Parallel(n_jobs=20)]: Done 160 tasks      | elapsed:   23.2s
[Parallel(n_jobs=20)]: Done 200 out of 200 | elapsed:   28.1s finished
Louvain completed 200 runs in 38.2129230499 seconds
Wrote graph to binary file in 0.0317859649658 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.67692
Louvain completed 51 runs in 63.2088201046 seconds
Preproc + Louvain took 101.515240908 s
Got 7 clusters after round 2
Counts:
{0: 28, 1: 23, 2: 23, 3: 22, 4: 22, 5: 19, 6: 8}
(Round 2) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 28 seqlets
Trimmed 0 out of 28
Aggregating for cluster 1 with 23 seqlets
Trimmed 0 out of 23
Aggregating for cluster 2 with 23 seqlets
Trimmed 3 out of 23
Aggregating for cluster 3 with 22 seqlets
Trimmed 3 out of 22
Aggregating for cluster 4 with 22 seqlets
Trimmed 0 out of 22
Aggregating for cluster 5 with 19 seqlets
Trimmed 2 out of 19
Aggregating for cluster 6 with 8 seqlets
Trimmed 0 out of 8
Got 7 clusters
Splitting into subclusters...
Merging on 7 clusters
On merging iteration 1
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 0 & 4 with prob 0.00016571562132085849 and sim 2.724524838300975
Trimmed 0 out of 50
On merging iteration 2
Computing pattern to seqlet distances
Computing pattern to pattern distances
Got 6 patterns after merging
Performing seqlet reassignment
Cross contin jaccard time taken: 9.36 s
Cross contin jaccard time taken: 9.32 s
Got 1 patterns after reassignment
Total time taken is 358.83s
On metacluster 1
Metacluster size 1329
Relevant tasks:  ('task0', 'task2', 'task3', 'task4')
Relevant signs:  (1, 1, 1, 1)
(Round 1) num seqlets: 1329
(Round 1) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 1.23 s
Starting affinity matrix computations
Normalization computed in 0.28 s
Cosine similarity mat computed in 0.45 s
Normalization computed in 0.33 s
Cosine similarity mat computed in 0.49 s
Finished affinity matrix computations in 0.98 s
(Round 1) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.08 s
(Round 1) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 182.3 s
Launching nearest neighbors affmat calculation job
Job completed in: 187.84 s
(Round 1) Computed affinity matrix on nearest neighbors in 377.3 s
Filtered down to 1105 of 1329
(Round 1) Retained 1105 rows out of 1329 after filtering
(Round 1) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 1105 samples in 0.001s...
[t-SNE] Computed neighbors for 1105 samples in 0.015s...
[t-SNE] Computed conditional probabilities for sample 1000 / 1105
[t-SNE] Computed conditional probabilities for sample 1105 / 1105
[t-SNE] Mean sigma: 0.220630
(Round 1) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.126359939575 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=20)]: Done  10 tasks      | elapsed:    3.1s
[Parallel(n_jobs=20)]: Done 160 tasks      | elapsed:   24.2s
[Parallel(n_jobs=20)]: Done 200 out of 200 | elapsed:   29.5s finished
Louvain completed 200 runs in 42.1135389805 seconds
Wrote graph to binary file in 0.604176044464 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.682747
Louvain completed 51 runs in 66.1642150879 seconds
Preproc + Louvain took 109.148432016 s
Got 14 clusters after round 1
Counts:
{0: 186, 1: 150, 2: 135, 3: 121, 4: 91, 5: 85, 6: 63, 7: 54, 8: 48, 9: 46, 10: 45, 11: 38, 12: 30, 13: 13}
(Round 1) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 186 seqlets
Trimmed 7 out of 186
Aggregating for cluster 1 with 150 seqlets
Trimmed 8 out of 150
Aggregating for cluster 2 with 135 seqlets
Trimmed 20 out of 135
Aggregating for cluster 3 with 121 seqlets
Trimmed 2 out of 121
Aggregating for cluster 4 with 91 seqlets
Trimmed 8 out of 91
Aggregating for cluster 5 with 85 seqlets
Trimmed 12 out of 85
Aggregating for cluster 6 with 63 seqlets
Trimmed 6 out of 63
Aggregating for cluster 7 with 54 seqlets
Trimmed 3 out of 54
Aggregating for cluster 8 with 48 seqlets
Trimmed 3 out of 48
Aggregating for cluster 9 with 46 seqlets
Trimmed 6 out of 46
Aggregating for cluster 10 with 45 seqlets
Trimmed 5 out of 45
Aggregating for cluster 11 with 38 seqlets
Trimmed 3 out of 38
Aggregating for cluster 12 with 30 seqlets
Trimmed 2 out of 30
Aggregating for cluster 13 with 13 seqlets
Trimmed 0 out of 13
(Round 2) num seqlets: 1020
(Round 2) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 1.08 s
Starting affinity matrix computations
Normalization computed in 0.25 s
Cosine similarity mat computed in 0.36 s
Normalization computed in 0.26 s
Cosine similarity mat computed in 0.32 s
Finished affinity matrix computations in 0.7 s
(Round 2) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.04 s
(Round 2) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 254.42 s
Launching nearest neighbors affmat calculation job
Job completed in: 265.58 s
(Round 2) Computed affinity matrix on nearest neighbors in 526.53 s
Not applying filtering for rounds above first round
(Round 2) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 1020 samples in 0.001s...
[t-SNE] Computed neighbors for 1020 samples in 0.017s...
[t-SNE] Computed conditional probabilities for sample 1000 / 1020
[t-SNE] Computed conditional probabilities for sample 1020 / 1020
[t-SNE] Mean sigma: 0.214053
(Round 2) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.133661031723 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=20)]: Done  10 tasks      | elapsed:    2.9s
[Parallel(n_jobs=20)]: Done 160 tasks      | elapsed:   23.1s
[Parallel(n_jobs=20)]: Done 200 out of 200 | elapsed:   28.0s finished
Louvain completed 200 runs in 40.2569828033 seconds
Wrote graph to binary file in 0.640966892242 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.629444
After 2 runs, maximum modularity is Q = 0.636637
After 7 runs, maximum modularity is Q = 0.642514
Louvain completed 57 runs in 77.1017999649 seconds
Preproc + Louvain took 118.239275932 s
Got 13 clusters after round 2
Counts:
{0: 189, 1: 159, 2: 144, 3: 105, 4: 95, 5: 73, 6: 58, 7: 49, 8: 38, 9: 37, 10: 32, 11: 26, 12: 15}
(Round 2) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 189 seqlets
Trimmed 10 out of 189
Aggregating for cluster 1 with 159 seqlets
Trimmed 38 out of 159
Aggregating for cluster 2 with 144 seqlets
Trimmed 0 out of 144
Aggregating for cluster 3 with 105 seqlets
Trimmed 1 out of 105
Aggregating for cluster 4 with 95 seqlets
Trimmed 10 out of 95
Aggregating for cluster 5 with 73 seqlets
Trimmed 1 out of 73
Aggregating for cluster 6 with 58 seqlets
Trimmed 1 out of 58
Aggregating for cluster 7 with 49 seqlets
Trimmed 1 out of 49
Aggregating for cluster 8 with 38 seqlets
Trimmed 2 out of 38
Aggregating for cluster 9 with 37 seqlets
Trimmed 6 out of 37
Aggregating for cluster 10 with 32 seqlets
Trimmed 2 out of 32
Aggregating for cluster 11 with 26 seqlets
Trimmed 0 out of 26
Aggregating for cluster 12 with 15 seqlets
Trimmed 2 out of 15
Got 13 clusters
Splitting into subclusters...
Inspecting for spurious merging
Wrote graph to binary file in 0.0775530338287 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00541815
Louvain completed 21 runs in 28.0289320946 seconds
Similarity is 0.9131283255382799; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.043771982193 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00524634
After 3 runs, maximum modularity is Q = 0.00529535
Louvain completed 23 runs in 32.2287828922 seconds
Similarity is 0.8623114308038067; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0531320571899 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00443683
After 2 runs, maximum modularity is Q = 0.00456281
Louvain completed 22 runs in 31.0968630314 seconds
Similarity is 0.8877175181847337; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0185389518738 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00848325
Louvain completed 21 runs in 28.266988039 seconds
Similarity is 0.8085280636876344; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0204861164093 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00480888
After 2 runs, maximum modularity is Q = 0.0060668
Louvain completed 22 runs in 30.9429588318 seconds
Similarity is 0.8699232155730213; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0166790485382 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00244599
Louvain completed 21 runs in 27.9581930637 seconds
Similarity is 0.9392795983361399; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.011204957962 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00454621
Louvain completed 21 runs in 28.8428430557 seconds
Similarity is 0.9142965669653971; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.00778102874756 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0143153
Louvain completed 21 runs in 28.1154088974 seconds
Similarity is 0.7858282126522995; is_dissimilar is True
Got 2 subclusters
Inspecting for spurious merging
Wrote graph to binary file in 0.00501394271851 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0163461
Louvain completed 21 runs in 28.1132519245 seconds
Similarity is 0.480683172139852; is_dissimilar is True
Got 2 subclusters
Inspecting for spurious merging
Wrote graph to binary file in 0.0065221786499 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0107722
Louvain completed 21 runs in 27.9434950352 seconds
Similarity is 0.7813221647221764; is_dissimilar is True
Got 2 subclusters
Inspecting for spurious merging
Wrote graph to binary file in 0.00392699241638 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00346683
After 7 runs, maximum modularity is Q = 0.0035091
After 16 runs, maximum modularity is Q = 0.00350911
Louvain completed 36 runs in 50.1041929722 seconds
Similarity is 0.8603345163996821; is_dissimilar is False
Merging on 16 clusters
On merging iteration 1
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 2 & 4 with prob 7.372376321920569e-05 and sim 3.757448404079435
Collapsing 0 & 2 with prob 0.0005871466609521495 and sim 3.7393896164613993
Collapsing 5 & 6 with prob 0.0015305479408278637 and sim 3.652967265824873
Collapsing 0 & 11 with prob 4.041862899245671e-06 and sim 3.649273391308513
Collapsing 2 & 11 with prob 7.335340258643692e-06 and sim 3.613859776886387
Collapsing 0 & 4 with prob 2.260034049697568e-05 and sim 3.6071316878519895
Trimmed 0 out of 229
Trimmed 3 out of 408
Trimmed 0 out of 129
Trimmed 19 out of 424
On merging iteration 2
Computing pattern to seqlet distances
Computing pattern to pattern distances
Got 12 patterns after merging
Performing seqlet reassignment
Cross contin jaccard time taken: 10.59 s
Cross contin jaccard time taken: 9.92 s
Discarded 85 seqlets
Got 5 patterns after reassignment
Total time taken is 1607.44s
On metacluster 0
Metacluster size 6696
Relevant tasks:  ('task0', 'task1', 'task2', 'task3', 'task4')
Relevant signs:  (1, 1, 1, 1, 1)
(Round 1) num seqlets: 6696
(Round 1) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 6.52 s
Starting affinity matrix computations
Normalization computed in 1.94 s
Cosine similarity mat computed in 4.32 s
Normalization computed in 1.74 s
Cosine similarity mat computed in 4.0 s
Finished affinity matrix computations in 8.46 s
(Round 1) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.93 s
(Round 1) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 1310.15 s
Launching nearest neighbors affmat calculation job
Job completed in: 1310.39 s
(Round 1) Computed affinity matrix on nearest neighbors in 2666.33 s
Filtered down to 5981 of 6696
(Round 1) Retained 5981 rows out of 6696 after filtering
(Round 1) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 5981 samples in 0.023s...
[t-SNE] Computed neighbors for 5981 samples in 0.220s...
[t-SNE] Computed conditional probabilities for sample 1000 / 5981
[t-SNE] Computed conditional probabilities for sample 2000 / 5981
[t-SNE] Computed conditional probabilities for sample 3000 / 5981
[t-SNE] Computed conditional probabilities for sample 4000 / 5981
[t-SNE] Computed conditional probabilities for sample 5000 / 5981
[t-SNE] Computed conditional probabilities for sample 5981 / 5981
[t-SNE] Mean sigma: 0.185768
(Round 1) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.51270198822 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=20)]: Done  10 tasks      | elapsed:    4.0s
[Parallel(n_jobs=20)]: Done 160 tasks      | elapsed:   27.3s
[Parallel(n_jobs=20)]: Done 200 out of 200 | elapsed:   32.8s finished
Louvain completed 200 runs in 70.4713599682 seconds
Wrote graph to binary file in 12.0959758759 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.673085
After 3 runs, maximum modularity is Q = 0.695872
Louvain completed 53 runs in 105.350421906 seconds
Preproc + Louvain took 190.456908941 s
Got 14 clusters after round 1
Counts:
{0: 1227, 1: 1025, 2: 759, 3: 592, 4: 591, 5: 547, 6: 388, 7: 175, 8: 142, 9: 133, 10: 127, 11: 114, 12: 113, 13: 48}
(Round 1) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 1227 seqlets
Trimmed 29 out of 1227
Skipped 5 seqlets
Aggregating for cluster 1 with 1025 seqlets
Trimmed 58 out of 1025
Skipped 4 seqlets
Aggregating for cluster 2 with 759 seqlets
Trimmed 46 out of 759
Aggregating for cluster 3 with 592 seqlets
Trimmed 25 out of 592
Skipped 1 seqlets
Aggregating for cluster 4 with 591 seqlets
Trimmed 11 out of 591
Skipped 2 seqlets
Aggregating for cluster 5 with 547 seqlets
Trimmed 31 out of 547
Skipped 1 seqlets
Aggregating for cluster 6 with 388 seqlets
Trimmed 18 out of 388
Aggregating for cluster 7 with 175 seqlets
Trimmed 31 out of 175
Aggregating for cluster 8 with 142 seqlets
Trimmed 37 out of 142
Aggregating for cluster 9 with 133 seqlets
Trimmed 47 out of 133
Aggregating for cluster 10 with 127 seqlets
Trimmed 13 out of 127
Aggregating for cluster 11 with 114 seqlets
Trimmed 3 out of 114
Skipped 5 seqlets
Aggregating for cluster 12 with 113 seqlets
Trimmed 6 out of 113
Aggregating for cluster 13 with 48 seqlets
Trimmed 7 out of 48
(Round 2) num seqlets: 5601
(Round 2) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 5.94 s
Starting affinity matrix computations
Normalization computed in 1.23 s
Cosine similarity mat computed in 2.84 s
Normalization computed in 1.28 s
Cosine similarity mat computed in 2.99 s
Finished affinity matrix computations in 6.0 s
(Round 2) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 0.61 s
(Round 2) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 1933.74 s
Launching nearest neighbors affmat calculation job
Job completed in: 1919.1 s
(Round 2) Computed affinity matrix on nearest neighbors in 3899.73 s
Not applying filtering for rounds above first round
(Round 2) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 5601 samples in 0.029s...
[t-SNE] Computed neighbors for 5601 samples in 0.209s...
[t-SNE] Computed conditional probabilities for sample 1000 / 5601
[t-SNE] Computed conditional probabilities for sample 2000 / 5601
[t-SNE] Computed conditional probabilities for sample 3000 / 5601
[t-SNE] Computed conditional probabilities for sample 4000 / 5601
[t-SNE] Computed conditional probabilities for sample 5000 / 5601
[t-SNE] Computed conditional probabilities for sample 5601 / 5601
[t-SNE] Mean sigma: 0.185429
(Round 2) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.700870990753 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=20)]: Done  10 tasks      | elapsed:    3.0s
[Parallel(n_jobs=20)]: Done 160 tasks      | elapsed:   26.4s
[Parallel(n_jobs=20)]: Done 200 out of 200 | elapsed:   32.5s finished
Louvain completed 200 runs in 59.8181450367 seconds
Wrote graph to binary file in 11.2102019787 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.647064
After 2 runs, maximum modularity is Q = 0.650982
After 4 runs, maximum modularity is Q = 0.670435
After 9 runs, maximum modularity is Q = 0.670867
Louvain completed 59 runs in 118.77376008 seconds
Preproc + Louvain took 192.773169994 s
Got 14 clusters after round 2
Counts:
{0: 1184, 1: 689, 2: 595, 3: 547, 4: 535, 5: 516, 6: 417, 7: 415, 8: 143, 9: 127, 10: 114, 11: 109, 12: 106, 13: 104}
(Round 2) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 1184 seqlets
Trimmed 0 out of 1184
Skipped 3 seqlets
Aggregating for cluster 1 with 689 seqlets
Trimmed 3 out of 689
Aggregating for cluster 2 with 595 seqlets
Trimmed 0 out of 595
Aggregating for cluster 3 with 547 seqlets
Trimmed 14 out of 547
Aggregating for cluster 4 with 535 seqlets
Trimmed 4 out of 535
Aggregating for cluster 5 with 516 seqlets
Trimmed 0 out of 516
Aggregating for cluster 6 with 417 seqlets
Trimmed 1 out of 417
Aggregating for cluster 7 with 415 seqlets
Trimmed 2 out of 415
Aggregating for cluster 8 with 143 seqlets
Trimmed 1 out of 143
Aggregating for cluster 9 with 127 seqlets
Trimmed 11 out of 127
Aggregating for cluster 10 with 114 seqlets
Trimmed 0 out of 114
Aggregating for cluster 11 with 109 seqlets
Trimmed 0 out of 109
Aggregating for cluster 12 with 106 seqlets
Trimmed 0 out of 106
Aggregating for cluster 13 with 104 seqlets
Trimmed 0 out of 104
Got 14 clusters
Splitting into subclusters...
Inspecting for spurious merging
Wrote graph to binary file in 2.07393097878 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00620341
After 2 runs, maximum modularity is Q = 0.0068226
Louvain completed 22 runs in 35.8737690449 seconds
Similarity is 0.9223608194369145; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.747401952744 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00477084
After 2 runs, maximum modularity is Q = 0.00477189
Louvain completed 22 runs in 34.7182040215 seconds
Similarity is 0.9417501987121789; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.667191982269 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00464406
After 3 runs, maximum modularity is Q = 0.00465804
After 7 runs, maximum modularity is Q = 0.00465875
After 8 runs, maximum modularity is Q = 0.00466247
Louvain completed 28 runs in 45.3922200203 seconds
Similarity is 0.9489668703334969; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.667376995087 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00444868
After 19 runs, maximum modularity is Q = 0.00444925
After 29 runs, maximum modularity is Q = 0.00445113
Louvain completed 49 runs in 73.5596499443 seconds
Similarity is 0.9585475240400645; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.533906936646 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00527866
After 17 runs, maximum modularity is Q = 0.00527944
After 29 runs, maximum modularity is Q = 0.00527945
Louvain completed 49 runs in 74.0082519054 seconds
Similarity is 0.9497075842587579; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.522756814957 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0137837
Louvain completed 21 runs in 32.1404428482 seconds
Similarity is 0.8452915380393409; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.488066911697 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00496997
Louvain completed 21 runs in 31.8568501472 seconds
Similarity is 0.9510682130386937; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.326495885849 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00879021
Louvain completed 21 runs in 31.6473829746 seconds
Similarity is 0.8855765971585265; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0571460723877 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00331381
After 4 runs, maximum modularity is Q = 0.00349839
After 6 runs, maximum modularity is Q = 0.00352681
Louvain completed 26 runs in 40.9842209816 seconds
Similarity is 0.9599237419370916; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0240290164948 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0406232
Louvain completed 21 runs in 31.7682688236 seconds
Similarity is 0.055881206564086905; is_dissimilar is True
Inspecting for spurious merging
Wrote graph to binary file in 0.0155379772186 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0200601
Louvain completed 21 runs in 31.2434558868 seconds
Similarity is 0.6130382783415537; is_dissimilar is True
Inspecting for spurious merging
Wrote graph to binary file in 0.00938200950623 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00159263
After 6 runs, maximum modularity is Q = 0.00163222
Louvain completed 26 runs in 39.1714100838 seconds
Similarity is 0.9503052014642874; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.00417590141296 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0168631
Louvain completed 21 runs in 30.8959441185 seconds
Similarity is 0.7089242933879802; is_dissimilar is True
Got 3 subclusters
Inspecting for spurious merging
Wrote graph to binary file in 0.0355310440063 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00440202
After 3 runs, maximum modularity is Q = 0.00490031
Louvain completed 23 runs in 35.0940752029 seconds
Similarity is 0.8796776260772249; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0290160179138 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0238614
Louvain completed 21 runs in 31.4730930328 seconds
Similarity is 0.5866029723403334; is_dissimilar is True
Inspecting for spurious merging
Wrote graph to binary file in 0.016706943512 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0082375
Louvain completed 21 runs in 31.23350811 seconds
Similarity is 0.9165886882143319; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.00988101959229 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0105628
Louvain completed 21 runs in 30.7403330803 seconds
Similarity is 0.8724913873779825; is_dissimilar is False
Got 2 subclusters
Inspecting for spurious merging
Wrote graph to binary file in 0.0250601768494 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0043091
After 3 runs, maximum modularity is Q = 0.00476036
Louvain completed 23 runs in 35.4201431274 seconds
Similarity is 0.9012039602040272; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.0260429382324 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00574779
After 2 runs, maximum modularity is Q = 0.0057478
Louvain completed 22 runs in 34.0150830746 seconds
Similarity is 0.9121016186890357; is_dissimilar is False
Merging on 17 clusters
On merging iteration 1
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 2 & 3 with prob 0.0017637841382360758 and sim 4.912683695905625
Collapsing 4 & 6 with prob 0.0006025761253504474 and sim 4.898867933231291
Collapsing 0 & 1 with prob 0.0015069290426787414 and sim 4.751970973968142
Collapsing 2 & 6 with prob 0.005137313054664138 and sim 4.700937958803292
Collapsing 3 & 4 with prob 0.005801716544941063 and sim 4.685169364206762
Collapsing 2 & 4 with prob 0.00012647712198884378 and sim 4.627482314376274
Collapsing 3 & 6 with prob 0.00028375975368660354 and sim 4.624163594976764
Collapsing 1 & 2 with prob 0.001352859863517158 and sim 4.602955238740328
Collapsing 1 & 3 with prob 0.00013141255298504558 and sim 4.570716545065298
Collapsing 12 & 15 with prob 0.0015801530044493952 and sim 4.564818149983144
Collapsing 3 & 7 with prob 5.45794154541789e-06 and sim 4.507103753245523
Collapsing 0 & 4 with prob 0.0006768325752600416 and sim 4.4968662766234
Collapsing 10 & 14 with prob 0.00023546967306854256 and sim 4.371975770230182
Collapsing 1 & 4 with prob 2.1374299743460798e-05 and sim 4.356721007580713
Collapsing 0 & 6 with prob 0.00030507018025603184 and sim 4.3481096863983115
Collapsing 0 & 3 with prob 0.0003021369872452415 and sim 4.33849966092982
Collapsing 0 & 2 with prob 0.0003000390396882861 and sim 4.271753750302629
Trimmed 0 out of 1128
Trimmed 0 out of 947
Trimmed 2 out of 1867
Trimmed 1 out of 2075
Trimmed 11 out of 3939
Trimmed 0 out of 220
Trimmed 11 out of 4341
Skipped 1 seqlets
Trimmed 0 out of 67
On merging iteration 2
Computing pattern to seqlet distances
Computing pattern to pattern distances
Got 9 patterns after merging
Performing seqlet reassignment
Got 9 patterns after reassignment
Total time taken is 8005.45s
2018-07-19 20:37:58 DEBUG **************** workflow done *********************
2018-07-19 20:38:00 DEBUG **************** result saved *********************
