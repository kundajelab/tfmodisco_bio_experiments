Using cuDNN version 7001 on context None
Mapped name None to device cuda0: GeForce GTX TITAN X (0000:05:00.0)
2018-09-07 12:38:16 INFO  /home/ktian/kundajelab/tfnet/scripts/run_tfmodisco.py --scores scores/hyp_scores_task_ --fasta interpret.fa --tsv interpret.tsv --start-task 0 --end-task 1 --fdr 0.01
2018-09-07 12:38:16 DEBUG Theano version:1.0.2
2018-09-07 12:38:16 DEBUG 2.7.15 |Anaconda, Inc.| (default, May  1 2018, 23:32:55) 
[GCC 7.2.0]
2018-09-07 12:38:16 DEBUG method file prefix is scores/hyp_scores_task_, input seq file is interpret.fa, input tsv is interpret.tsv, start_task is 0 end_task is 1, fdr is 0.010000
2018-09-07 12:38:16 DEBUG lenth of sequences = 38932
2018-09-07 12:38:19 DEBUG merged overlaps based on in_tsv interpret.tsv, 38932 seqs merged into 37717 seqs, max len 1121
2018-09-07 12:38:29 DEBUG shape of hyp_score (400, 4)
2018-09-07 12:38:29 DEBUG shape of score (400, 4)
On task task0
Computing windowed sums
Computing threshold
2018-09-07 12:39:26 DEBUG CACHEDIR=/home/ktian/.cache/matplotlib
2018-09-07 12:39:26 DEBUG Using fontManager instance from /home/ktian/.cache/matplotlib/fontList.json
2018-09-07 12:39:26 DEBUG backend agg version v2.2
2018-09-07 12:39:26 DEBUG findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans (u'/home/ktian/anaconda3/envs/tfenv/lib/python2.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000
peak(mu)= 0.26383437860745473
Mu: 2.638344e-01 +/- 2.027452e-05
Lablace_b: 0.48601774186632696 and 1.4815552828443954
Thresholds: -4.738882164470851 and 11.308225855231285
#fdrs pass: 0 and 644604
CDFs: 0.9999661401182307 and 0.9994212227615057
Est. FDRs: 1.0 and 0.009999787275165877
saving plot to figures/laplace_0.png
Got 36270 coords
After resolving overlaps, got 36270 seqlets
Across all tasks, the weakest laplace threshold used was: 0.9994212227615057
36270 identified in total
1 activity patterns with support >= 100 out of 3 possible patterns
Metacluster sizes:  [36269]
Idx to activities:  {0: '1'}
On metacluster 0
Metacluster size 36269 limited to 20000
Relevant tasks:  ('task0',)
Relevant signs:  (1,)
TfModiscoSeqletsToPatternsFactory: seed=1234
(Round 1) num seqlets: 20000
(Round 1) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 24.14 s
Starting affinity matrix computations
Normalization computed in 7.24 s
Cosine similarity mat computed in 72.46 s
Normalization computed in 6.15 s
Cosine similarity mat computed in 67.56 s
Finished affinity matrix computations in 140.78 s
(Round 1) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 12.29 s
(Round 1) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 569.51 s
Launching nearest neighbors affmat calculation job
Job completed in: 501.16 s
(Round 1) Computed affinity matrix on nearest neighbors in 1115.05 s
Filtered down to 17759 of 20000
(Round 1) Retained 17759 rows out of 20000 after filtering
(Round 1) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 17759 samples in 0.241s...
[t-SNE] Computed neighbors for 17759 samples in 2.696s...
[t-SNE] Computed conditional probabilities for sample 1000 / 17759
[t-SNE] Computed conditional probabilities for sample 2000 / 17759
[t-SNE] Computed conditional probabilities for sample 3000 / 17759
[t-SNE] Computed conditional probabilities for sample 4000 / 17759
[t-SNE] Computed conditional probabilities for sample 5000 / 17759
[t-SNE] Computed conditional probabilities for sample 6000 / 17759
[t-SNE] Computed conditional probabilities for sample 7000 / 17759
[t-SNE] Computed conditional probabilities for sample 8000 / 17759
[t-SNE] Computed conditional probabilities for sample 9000 / 17759
[t-SNE] Computed conditional probabilities for sample 10000 / 17759
[t-SNE] Computed conditional probabilities for sample 11000 / 17759
[t-SNE] Computed conditional probabilities for sample 12000 / 17759
[t-SNE] Computed conditional probabilities for sample 13000 / 17759
[t-SNE] Computed conditional probabilities for sample 14000 / 17759
[t-SNE] Computed conditional probabilities for sample 15000 / 17759
[t-SNE] Computed conditional probabilities for sample 16000 / 17759
[t-SNE] Computed conditional probabilities for sample 17000 / 17759
[t-SNE] Computed conditional probabilities for sample 17759 / 17759
[t-SNE] Mean sigma: 0.166490
(Round 1) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 1.07258605957 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:   17.9s
[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:  1.3min
[Parallel(n_jobs=4)]: Done 200 out of 200 | elapsed:  1.4min finished
Louvain completed 200 runs in 224.243330956 seconds
Wrote graph to binary file in 64.1787290573 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.782274
After 48 runs, maximum modularity is Q = 0.793127
Louvain completed 98 runs in 440.638641119 seconds
Preproc + Louvain took 750.227815151 s
Got 11 clusters after round 1
Counts:
{0: 2619, 1: 2574, 2: 2227, 3: 1828, 4: 1669, 5: 1572, 6: 1337, 7: 1335, 8: 963, 9: 891, 10: 744}
(Round 1) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 2619 seqlets
Trimmed 37 out of 2619
Aggregating for cluster 1 with 2574 seqlets
Trimmed 17 out of 2574
Aggregating for cluster 2 with 2227 seqlets
Trimmed 32 out of 2227
Aggregating for cluster 3 with 1828 seqlets
Trimmed 37 out of 1828
Aggregating for cluster 4 with 1669 seqlets
Trimmed 51 out of 1669
Aggregating for cluster 5 with 1572 seqlets
Trimmed 60 out of 1572
Aggregating for cluster 6 with 1337 seqlets
Trimmed 42 out of 1337
Aggregating for cluster 7 with 1335 seqlets
Trimmed 68 out of 1335
Aggregating for cluster 8 with 963 seqlets
Trimmed 81 out of 963
Aggregating for cluster 9 with 891 seqlets
Trimmed 39 out of 891
Aggregating for cluster 10 with 744 seqlets
Trimmed 102 out of 744
(Round 2) num seqlets: 17193
(Round 2) Computing coarse affmat
Beginning embedding computation
Computing embeddings
Finished embedding computation in 18.03 s
Starting affinity matrix computations
Normalization computed in 3.91 s
Cosine similarity mat computed in 23.82 s
Normalization computed in 4.27 s
Cosine similarity mat computed in 22.41 s
Finished affinity matrix computations in 46.77 s
(Round 2) Compute nearest neighbors from coarse affmat
Computed nearest neighbors in 4.98 s
(Round 2) Computing affinity matrix on nearest neighbors
Launching nearest neighbors affmat calculation job
Job completed in: 661.48 s
Launching nearest neighbors affmat calculation job
Job completed in: 638.37 s
(Round 2) Computed affinity matrix on nearest neighbors in 1333.97 s
Not applying filtering for rounds above first round
(Round 2) Computing density adapted affmat
[t-SNE] Computing 31 nearest neighbors...
[t-SNE] Indexed 17193 samples in 0.239s...
[t-SNE] Computed neighbors for 17193 samples in 1.814s...
[t-SNE] Computed conditional probabilities for sample 1000 / 17193
[t-SNE] Computed conditional probabilities for sample 2000 / 17193
[t-SNE] Computed conditional probabilities for sample 3000 / 17193
[t-SNE] Computed conditional probabilities for sample 4000 / 17193
[t-SNE] Computed conditional probabilities for sample 5000 / 17193
[t-SNE] Computed conditional probabilities for sample 6000 / 17193
[t-SNE] Computed conditional probabilities for sample 7000 / 17193
[t-SNE] Computed conditional probabilities for sample 8000 / 17193
[t-SNE] Computed conditional probabilities for sample 9000 / 17193
[t-SNE] Computed conditional probabilities for sample 10000 / 17193
[t-SNE] Computed conditional probabilities for sample 11000 / 17193
[t-SNE] Computed conditional probabilities for sample 12000 / 17193
[t-SNE] Computed conditional probabilities for sample 13000 / 17193
[t-SNE] Computed conditional probabilities for sample 14000 / 17193
[t-SNE] Computed conditional probabilities for sample 15000 / 17193
[t-SNE] Computed conditional probabilities for sample 16000 / 17193
[t-SNE] Computed conditional probabilities for sample 17000 / 17193
[t-SNE] Computed conditional probabilities for sample 17193 / 17193
[t-SNE] Mean sigma: 0.163127
(Round 2) Computing clustering
Beginning preprocessing + Louvain
Wrote graph to binary file in 0.975419044495 seconds
Running Louvain modularity optimization
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:   29.9s
[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:  2.2min
[Parallel(n_jobs=4)]: Done 200 out of 200 | elapsed:  2.3min finished
Louvain completed 200 runs in 238.790884018 seconds
Wrote graph to binary file in 68.9208750725 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.722355
After 2 runs, maximum modularity is Q = 0.747135
After 3 runs, maximum modularity is Q = 0.747233
After 37 runs, maximum modularity is Q = 0.747895
Louvain completed 87 runs in 462.476777077 seconds
Preproc + Louvain took 789.144296169 s
Got 11 clusters after round 2
Counts:
{0: 2595, 1: 2261, 2: 1890, 3: 1822, 4: 1677, 5: 1645, 6: 1596, 7: 1397, 8: 838, 9: 826, 10: 646}
(Round 2) Aggregating seqlets in each cluster
Aggregating for cluster 0 with 2595 seqlets
Trimmed 3 out of 2595
Aggregating for cluster 1 with 2261 seqlets
Trimmed 2 out of 2261
Aggregating for cluster 2 with 1890 seqlets
Trimmed 18 out of 1890
Aggregating for cluster 3 with 1822 seqlets
Trimmed 11 out of 1822
Aggregating for cluster 4 with 1677 seqlets
Trimmed 2 out of 1677
Aggregating for cluster 5 with 1645 seqlets
Trimmed 0 out of 1645
Aggregating for cluster 6 with 1596 seqlets
Trimmed 4 out of 1596
Aggregating for cluster 7 with 1397 seqlets
Trimmed 0 out of 1397
Aggregating for cluster 8 with 838 seqlets
Trimmed 1 out of 838
Aggregating for cluster 9 with 826 seqlets
Trimmed 2 out of 826
Aggregating for cluster 10 with 646 seqlets
Trimmed 0 out of 646
Got 11 clusters
Splitting into subclusters...
Inspecting for spurious merging
Wrote graph to binary file in 8.07994508743 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00370754
After 9 runs, maximum modularity is Q = 0.00370757
Louvain completed 29 runs in 62.2486698627 seconds
Similarity is 0.9724396850601585; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 6.18400907516 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00352758
After 2 runs, maximum modularity is Q = 0.0035277
After 12 runs, maximum modularity is Q = 0.00352772
Louvain completed 32 runs in 63.6261069775 seconds
Similarity is 0.9692116621074586; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 3.58914804459 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0075954
After 4 runs, maximum modularity is Q = 0.00759554
After 11 runs, maximum modularity is Q = 0.00759555
Louvain completed 31 runs in 55.8167729378 seconds
Similarity is 0.9307143897757828; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 3.6036400795 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00499485
After 2 runs, maximum modularity is Q = 0.00499488
Louvain completed 22 runs in 39.1932170391 seconds
Similarity is 0.9630580456789194; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 2.92975592613 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00440237
After 3 runs, maximum modularity is Q = 0.00440239
After 4 runs, maximum modularity is Q = 0.00440246
Louvain completed 24 runs in 44.180907011 seconds
Similarity is 0.9651505294946144; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 2.93950510025 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0139773
Louvain completed 21 runs in 34.9347407818 seconds
Similarity is 0.8495526452887038; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 2.74256181717 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00566382
Louvain completed 21 runs in 35.5016739368 seconds
Similarity is 0.9539797303598474; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 1.98413109779 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00578613
After 2 runs, maximum modularity is Q = 0.00578638
Louvain completed 22 runs in 37.3117229939 seconds
Similarity is 0.9490560788704975; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.832716941833 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00210718
After 2 runs, maximum modularity is Q = 0.00211258
After 3 runs, maximum modularity is Q = 0.0030789
After 4 runs, maximum modularity is Q = 0.00310491
After 5 runs, maximum modularity is Q = 0.00310516
After 12 runs, maximum modularity is Q = 0.0031084
Louvain completed 32 runs in 54.900646925 seconds
Similarity is 0.9721007364882545; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.78520321846 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.0132158
Louvain completed 21 runs in 32.2280938625 seconds
Similarity is 0.876620846314952; is_dissimilar is False
Inspecting for spurious merging
Wrote graph to binary file in 0.458275079727 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.00608877
Louvain completed 21 runs in 31.7480509281 seconds
Similarity is 0.9398545470622869; is_dissimilar is False
Merging on 11 clusters
On merging iteration 1
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 0 & 4 with prob 0.004416613093385208 and sim 0.9821890455907776
Collapsing 3 & 6 with prob 0.008620250459521972 and sim 0.9757881996573893
Collapsing 0 & 1 with prob 0.00017890554022915168 and sim 0.9694151756610468
Collapsing 3 & 8 with prob 2.548742664728679e-05 and sim 0.9643550147309974
Collapsing 1 & 8 with prob 1.371569836474224e-05 and sim 0.9635596764763091
Aborting collapse as 1 & 6 have prob 6.874222695236784e-08 and sim 0.8339927612646543
Aborting collapse as 4 & 6 have prob 8.693685176474288e-08 and sim 0.8543689166554389
Collapsing 1 & 10 with prob 4.71965307954222e-06 and sim 0.9628024426534976
Collapsing 3 & 9 with prob 2.7118714759668136e-05 and sim 0.9601166982513061
Collapsing 0 & 7 with prob 0.0006210440191356334 and sim 0.9577654048496176
Collapsing 1 & 4 with prob 2.1185223204833358e-05 and sim 0.9571552626592483
Collapsing 6 & 9 with prob 2.4155637634868664e-05 and sim 0.9563421130182632
Collapsing 8 & 10 with prob 1.7923494789498806e-06 and sim 0.9542812117869534
Aborting collapse as 1 & 6 have prob 6.874222695236784e-08 and sim 0.8339927612646543
Aborting collapse as 3 & 7 have prob 3.832771578441762e-08 and sim 0.7727857517178954
Aborting collapse as 4 & 6 have prob 8.693685176474288e-08 and sim 0.8543689166554389
Aborting collapse as 6 & 7 have prob 1.131634232400441e-08 and sim 0.7333410678909797
Aborting collapse as 7 & 8 have prob 2.8162303647379925e-08 and sim 0.8602879562709704
Aborting collapse as 9 & 10 have prob 2.2854121708999637e-08 and sim 0.8634956134564983
Collapsing 0 & 8 with prob 2.2983442548467897e-06 and sim 0.9533662983078499
Aborting collapse as 1 & 6 have prob 6.874222695236784e-08 and sim 0.8339927612646543
Aborting collapse as 3 & 7 have prob 3.832771578441762e-08 and sim 0.7727857517178954
Aborting collapse as 4 & 6 have prob 8.693685176474288e-08 and sim 0.8543689166554389
Aborting collapse as 6 & 7 have prob 1.131634232400441e-08 and sim 0.7333410678909797
Aborting collapse as 7 & 8 have prob 2.8162303647379925e-08 and sim 0.8602879562709704
Aborting collapse as 9 & 10 have prob 2.2854121708999637e-08 and sim 0.8634956134564983
Collapsing 4 & 8 with prob 1.6402682541186666e-06 and sim 0.9504551148535565
Aborting collapse as 1 & 6 have prob 6.874222695236784e-08 and sim 0.8339927612646543
Aborting collapse as 3 & 7 have prob 3.832771578441762e-08 and sim 0.7727857517178954
Aborting collapse as 4 & 6 have prob 8.693685176474288e-08 and sim 0.8543689166554389
Aborting collapse as 6 & 7 have prob 1.131634232400441e-08 and sim 0.7333410678909797
Aborting collapse as 7 & 8 have prob 2.8162303647379925e-08 and sim 0.8602879562709704
Aborting collapse as 9 & 10 have prob 2.2854121708999637e-08 and sim 0.8634956134564983
Collapsing 0 & 2 with prob 0.00027044680486011555 and sim 0.9450379290422202
Collapsing 0 & 10 with prob 3.008969573339343e-05 and sim 0.9429577860541047
Collapsing 6 & 8 with prob 1.9990620540782466e-06 and sim 0.9356969813392593
Collapsing 4 & 7 with prob 5.930367913296388e-05 and sim 0.9323055105200697
Collapsing 1 & 7 with prob 4.535975576006602e-06 and sim 0.9263326329643625
Collapsing 4 & 10 with prob 7.329467876526258e-06 and sim 0.9260826015010547
Collapsing 2 & 7 with prob 0.00011223767442766312 and sim 0.9246309433945457
Collapsing 2 & 4 with prob 7.050748150713283e-05 and sim 0.9244680848594535
Collapsing 3 & 5 with prob 8.413457034897517e-05 and sim 0.9217513622201746
Collapsing 2 & 9 with prob 6.16091109807402e-06 and sim 0.9087645189082773
Aborting collapse as 1 & 5 have prob 6.642278762123504e-08 and sim 0.7997467857852671
Aborting collapse as 3 & 7 have prob 3.832771578441762e-08 and sim 0.7727857517178954
Aborting collapse as 4 & 6 have prob 8.693685176474288e-08 and sim 0.8543689166554389
Aborting collapse as 5 & 7 have prob 1.8526742018084302e-07 and sim 0.7368363500572641
Aborting collapse as 6 & 7 have prob 1.131634232400441e-08 and sim 0.7333410678909797
Aborting collapse as 7 & 8 have prob 2.8162303647379925e-08 and sim 0.8602879562709704
Aborting collapse as 9 & 10 have prob 2.2854121708999637e-08 and sim 0.8634956134564983
Collapsing 5 & 6 with prob 3.842143077715855e-05 and sim 0.907013620644454
Collapsing 5 & 9 with prob 2.6186576016248696e-05 and sim 0.8896945424391601
Trimmed 0 out of 4267
Trimmed 0 out of 3403
Trimmed 0 out of 6526
Trimmed 1 out of 4240
Trimmed 0 out of 7172
Trimmed 2 out of 5063
Trimmed 1 out of 8569
Trimmed 9 out of 10440
Trimmed 4 out of 6706
On merging iteration 2
Computing pattern to seqlet distances
Computing pattern to pattern distances
Collapsing 0 & 1 with prob 0.0019257492012304603 and sim 0.9040764774592875
Trimmed 36 out of 17133
On merging iteration 3
Computing pattern to seqlet distances
Computing pattern to pattern distances
Got 1 patterns after merging
Performing seqlet reassignment
Got 1 patterns after reassignment
Total time taken is 5243.93s
2018-09-07 14:07:15 DEBUG **************** workflow done *********************
2018-09-07 14:07:17 DEBUG **************** result saved *********************
